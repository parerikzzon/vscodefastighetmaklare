

## 1 . Komma IgÃ¥ng-Guide: Flask & VS Code

Detta Ã¤r den steg-fÃ¶r-steg-guide som Ã¤r anpassad fÃ¶r att vara nybÃ¶rjarvÃ¤nlig.

### FÃ¶rutsÃ¤ttningar:

Innan du bÃ¶rjar behÃ¶ver du ha fÃ¶ljande installerat pÃ¥ din dator:

1.  **Python** (version 3.x rekommenderas).
2.  **Visual Studio Code** (VS Code).
3.  **VS Code-tillÃ¤gget Python** (SÃ¶k efter "Python" av Microsoft i tillÃ¤ggsvyn i VS Code och installera det).

-----

### Steg-fÃ¶r-Steg Anvisning:

#### Steg 1: Skapa en projektmapp och Ã¶ppna i VS Code

1.  **Skapa en mapp:** Skapa en ny mapp pÃ¥ din dator, t.ex. `vscodefastighetmaklare`.
2.  **Ã–ppna mappen i VS Code:**
      * Ã–ppna VS Code.
      * GÃ¥ till **Arkiv** \> **Ã–ppna mapp...** i menyn.
      * VÃ¤lj mappen du just skapade.

#### Steg 2: Skapa en Virtuell MiljÃ¶

Det Ã¤r bÃ¤st att isolera ditt projekt med en virtuell miljÃ¶ (venv) fÃ¶r att fÃ¶rhindra konflikter mellan olika Python-projekt.

1.  **Ã–ppna Terminalen:** I VS Code, gÃ¥ till **Terminal** \> **Ny Terminal**.
2.  **Skapa den Virtuella MiljÃ¶n:** Skriv fÃ¶ljande kommando i terminalen:
    
    python -m venv venv
    
    (Detta skapar en mapp som heter `venv` inuti ditt projekt).
3.  **Aktivera den Virtuella MiljÃ¶n:**
      ***I terminalen skriv: .\venv\Scripts\Activate.ps1
      
      ***macOS / Linux skriv: source venv/bin/activate
      ***Kontrollera:** NÃ¤r den Ã¤r aktiverad ska du se `(venv)` i bÃ¶rjan av terminalprompten[cite: 17].

#### Steg 3: Installera Flask

1.  **Installera Flask:** Se till att din virtuella miljÃ¶ Ã¤r aktiverad (se `(venv)` i terminalen) och skriv i terminalen:
    
    pip install Flask
    
    (Nu installeras Flask bara i din virtuella miljÃ¶) [cite\_start][cite: 17].

#### Steg 4: Skapa din Flask-app

1.  **Skapa filen:** I VS Code:s Utforskare, klicka pÃ¥ ikonen fÃ¶r **Ny Fil** och dÃ¶p filen till `flask_app.py`[cite: 18].

2.  **Skriv koden:** Klistra in fÃ¶ljande minimala Flask-kod i `flask_app.py`:

    
    from flask import Flask

    # Skapa en instans av Flask-applikationen
    app = Flask(__name__)

    # Skapa en "route" (rutt)
    # Denna funktion kÃ¶rs nÃ¤r nÃ¥gon besÃ¶ker startsidan ("/")
    @app.route("/")
    def hello_world():
        return "<p>Hej VÃ¤rlden! Min fÃ¶rsta Flask-app!</p>"

    # Det hÃ¤r kÃ¶r applikationen om filen startas direkt
    if __name__ == '__main__':
        app.run(debug=True) # debug=True gÃ¶r att servern laddas om automatiskt
   

#### Steg 5: KÃ¶r Flask-applikationen

1.  **KÃ¶r filen:** Se till att du fortfarande Ã¤r i terminalen med den aktiverade virtuella miljÃ¶n `(venv)`.
    KÃ¶r din app med fÃ¶ljande kommando i terminalen:

    ```bash
    python flask_app.py    
    ```

    *(Notera: Vi anvÃ¤nder `flask_app.py` fÃ¶r att vara konsekventa med Steg 4)*.

2.  **Kontrollera Utdata:** I terminalen bÃ¶r du se en utdata som liknar denna:

    ```
     * Serving Flask app 'app'
     * Debug mode: on
    ...
     * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)
    ```

3.  **BesÃ¶k Appen:**

      * HÃ¥ll in `Ctrl` (eller `Cmd` pÃ¥ Mac) och klicka pÃ¥ lÃ¤nken `http://127.0.0.1:5000` i terminalen.
      * Din webblÃ¤sare ska Ã¶ppnas och visa texten: **"Hej VÃ¤rlden\! Min fÃ¶rsta Flask-app\!"**



## 2 . Projektstruktur: MÃ¤klarens Flask-App (Boilerplate)

Detta Ã¤r en struktur kan anvÃ¤nda som mall fÃ¶r medelstora Flask-projekt, organiserad enligt MVC-principerna och Blueprints.


/vscodefastighetsmaklare               # Applikationens rotkatalog.
â”‚
â”œâ”€â”€ flask_app.py                 # HUVUDFIL - Startar appen
â”œâ”€â”€ database.py                  # ğŸ—„DATABASKONFIGURATION
â”‚
â”œâ”€â”€ models/                      # MODELLER (Databastabeller)
â”‚   â”œâ”€â”€ bostad.py               # Bostad-tabellen
â”‚   â””â”€â”€ maklare.py              # MÃ¤klare-tabellen
â”‚
â”œâ”€â”€ repositories/                #  REPOSITORIES (DatabasÃ¥tkomst)
â”‚   â”œâ”€â”€ bostad_repository.py    # CRUD fÃ¶r bostÃ¤der
â”‚   â””â”€â”€ maklare_repository.py   # CRUD fÃ¶r mÃ¤klare
â”‚
â”œâ”€â”€ blueprints/                  # ğŸ—ºBLUEPRINTS (URL-hantering)
â”‚   â”œâ”€â”€ bostader/
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ bostader_routes.py  # URL:er fÃ¶r bostÃ¤der
â”‚   â”‚   â””â”€â”€ templates/          # HTML fÃ¶r bostÃ¤der
â”‚   â”‚       â””â”€â”€bostader_lista.html
â”‚   â”‚       â””â”€â”€bostad_detalj.html
â”‚   â”œâ”€â”€ admin/
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ admin_routes.py     # URL:er fÃ¶r admin
â”‚   â”‚   â””â”€â”€ templates/          # HTML fÃ¶r admin
â”‚   â”‚       â””â”€â”€admin_bostader_form.html #fÃ¶r att lÃ¤gg till eller editera bostader
â”‚   â”‚       â””â”€â”€admin_bostader_list.html #dashbord som lsita alla bostÃ¤der, med crud knappadfunkr
â”‚   â””â”€â”€ maklare/
â”‚       â”œâ”€â”€ __init__.py
â”‚       â”œâ”€â”€ maklare_routes.py   # URL:er fÃ¶r mÃ¤klare
â”‚       â””â”€â”€ templates/          # HTML fÃ¶r mÃ¤klare
â”‚   â”‚       â””â”€â”€maklare_lista.html #visar all mÃ¤klare
â”‚   â”‚       â””â”€â”€maklare_detalj.html #mer info om en mÃ¤klare
â””â”€â”€ templates/
    â””â”€â”€ home.html               #start sidan
    â””â”€â”€ base.html               #mallen alla tempalte Ã¤rver ifrÃ¥m


